#!/usr/bin/env ruby
require 'rubygems'
require 'databasedotcom_console'
require 'irb'

def supported_ruby
	this_ruby = RUBY_VERSION.dup
	Gem::Version.new(this_ruby) >= Gem::Version.new("1.9.3")
end

require 'io/console' if supported_ruby
require 'optparse'

### RANDOM UTIL METHOD
def get_creds(opts={})
	creds = {}
	if opts[:host]
		creds[:host] = opts[:host]
	else
		print "HOST (test.salesforce.com, login.salesforce.com, etc): "
		creds[:host] = gets.strip
	end
	if opts[:un]
		creds[:un] = opts[:un]
	else
		print "USERNAME: "
		creds[:un] = gets.strip
	end
	if opts[:pw]
		creds[:pw] = opts[:pw]
	else
		print "PASSWORD (and security token if necessary): "
		creds[:pw] = STDIN.noecho(&:gets) if supported_ruby
		creds[:pw] = gets.strip unless supported_ruby		
	end
	creds
end

options = {}
parser = OptionParser.new do |opts|
	opts.banner = "Usage: dbdc [options]"
	opts.on("-h","--host HOST","enter the host (login.salesforce.com or test.salesforce.com") do |arg|
    options[:host] = arg
  end
  opts.on("-u","--username USERNAME","your username") do |arg|
    options[:un] = arg
  end
  opts.on("-p","--password PASSWORD","your password") do |arg|
    options[:pw] = arg
  end
end
parser.parse!

if ARGV[0] == "exec"
	path = ARGV[1]
	ARGV.clear
	creds = get_creds(options)
	@dbdc = DatabasedotcomConsole.new_client(creds[:host], creds[:un], creds[:pw])
	DatabasedotcomConsole::ScriptRunner.new(path, @dbdc)
else
	begin
		creds = get_creds(options)
		@dbdc = DatabasedotcomConsole.new_client(creds[:host], creds[:un], creds[:pw])
		
		def dbdc
			@dbdc
		end

		puts "\n\nWelcome to the Databasedotcom Ruby Console.  \nYou you can access your databasedotcom client via the variable: @dbdc"
		puts "\nExamples:\n"
		puts "@dbdc.list_sobjects"
		puts "@dbdc.materialze \'Account\'"
		puts "john = Account.find_by_LastName \'Yamaguchi\'"
		puts "account_list = Account.query \'FirstName != null AND My_Custom_Field__C > 7 LIMIT 10\' \n"
		puts "\n\n"
		puts "Check out https://github.com/heroku/databasedotcom for more documentation on the databasedotcom gem\n\n"

		ARGV.clear
		IRB.start
	rescue Exception => e
		puts "ERROR: #{e.message}"
		puts "\nOh Noes! Looks like an error occurred.  Make sure you have correctly entered your salesforce credentials!\n"
		puts "PROTIP: If your org requires a security token, please be sure to concatenate it at the end of your password. \n\n"
	end
end